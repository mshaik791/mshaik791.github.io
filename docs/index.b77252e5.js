!function(){function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},i={},s={},r=t.parcelRequire2041;null==r&&((r=function(e){if(e in i)return i[e].exports;if(e in s){var t=s[e];delete s[e];var r={id:e,exports:{}};return i[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){s[e]=t},t.parcelRequire2041=r),r.register;var n=r("aC01R"),o=r("hFCLM"),a={};a="#define GLSLIFY 1\nuniform sampler2D uTexture;\nuniform vec2 uOffset;\nvarying vec2 vUv;\n\nfloat M_PI = 3.141529;\n\nvec3 deformationCurve(vec3 position, vec2 uv, vec2 offset){\n    position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n    position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n    return position;\n}\n\nvoid main(){\n    vUv = uv;\n    vec3 newPosition = deformationCurve(position, uv, uOffset);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0) * 0.9;\n}";var h={};h="#define GLSLIFY 1\nuniform sampler2D uTexture;\nuniform float uAlpha;\nuniform vec2 uOffset;\nvarying vec2 vUv;\n\nvec3 rgbShift(sampler2D textureimage, vec2 uv, vec2 offset ){\n    float r = texture2D(textureimage, uv + offset).r;\n    vec2 gb = texture2D(textureimage, uv).gb;\n    return vec3(r, gb);\n}\n\nvoid main(){\n    // vec3 color = texture2D(uTexture, vUv).rgb;\n    vec3 color = rgbShift(uTexture, vUv, uOffset);\n    gl_FragColor = vec4(color, uAlpha);\n}\n";let u=new n.TextureLoader,l=u.load(o.default.me1),f=u.load(o.default.me2),v=u.load(o.default.me3),d=u.load(o.default.me4),c=u.load(o.default.me5),m=u.load(o.default.me6);new class{constructor(){this.container=document.querySelector(".landing"),this.inner=document.querySelector(".intro"),this.links=[...document.querySelectorAll("#shadedimg")],this.targetX=0,this.targetY=0,this.scene=new n.Scene,this.perspective=1e3,this.sizes=new n.Vector2(0,0),this.offset=new n.Vector2(0,0),this.uniforms={uTexture:{value:l},uAlpha:{value:0},uOffset:{value:new n.Vector2(0,0)},transparent:!0},this.links.map((e,t)=>{e.addEventListener("mouseenter",()=>{switch(t){case 0:this.uniforms.uTexture.value=l;break;case 1:this.uniforms.uTexture.value=f;break;case 2:this.uniforms.uTexture.value=v;break;case 3:this.uniforms.uTexture.value=d;break;case 4:this.uniforms.uTexture.value=c;break;case 5:this.uniforms.uTexture.value=m}}),e.addEventListener("mouseleave",()=>{this.uniforms.uAlpha.value=.9*this.uniforms.uAlpha.value+0})}),this.checkHovered(),this.setupCamera(),this.followMouseMove(),this.createMesh(),this.render()}get viewport(){let e=window.innerWidth,t=window.innerHeight;return{width:e,height:t,aspectRatio:e/t,pixelRatio:window.devicePixelRatio}}checkHovered(){this.inner.addEventListener("mouseenter",()=>{this.hovered=!0}),this.inner.addEventListener("mouseleave",()=>{this.hovered=!1,this.uniforms.uTexture={value:l}})}setupCamera(){window.addEventListener("resize",this.onResize.bind(this));let e=2*Math.atan(this.viewport.height/2/this.perspective)*180/Math.PI;this.camera=new n.PerspectiveCamera(e,this.viewport.aspectRatio,.1,1e3),this.camera.position.set(0,0,this.perspective),this.renderer=new n.WebGL1Renderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.viewport.width,this.viewport.height),this.renderer.setPixelRatio(this.viewport.pixelRatio),this.container.appendChild(this.renderer.domElement)}createMesh(){this.geometry=new n.PlaneGeometry(1,1,20,20),this.material=new n.ShaderMaterial({uniforms:this.uniforms,vertexShader:e(a),fragmentShader:e(h),transparent:!0}),this.mesh=new n.Mesh(this.geometry,this.material),this.sizes.set(370,470,1),this.mesh.scale.set(this.sizes.x,this.sizes.y,1),this.mesh.position.set(this.offset.x,this.offset.y,0),this.scene.add(this.mesh)}followMouseMove(){window.addEventListener("mousemove",e=>{this.targetX=e.clientX,this.targetY=e.clientY})}onResize(){this.camera.aspect=this.viewport.aspectRatio,this.viewport.height,this.perspective,this.renderer.setSize(this.viewport.width,this.viewport.height),this.camera.updateProjectionMatrix()}render(){this.offset.x=.9*this.offset.x+.1*this.targetX,this.offset.y=.9*this.offset.y+.1*this.targetY,this.uniforms.uOffset.value.set((this.targetX-this.offset.x)*6e-4,-(6e-4*(this.targetY-this.offset.y))),this.mesh.position.set(this.offset.x-window.innerWidth/2,-this.offset.y+window.innerHeight/2),this.hovered?this.uniforms.uAlpha.value=.9*this.uniforms.uAlpha.value+.1:this.uniforms.uAlpha.value=.9*this.uniforms.uAlpha.value+0,this.renderer.render(this.scene,this.camera),window.requestAnimationFrame(this.render.bind(this))}}}();
//# sourceMappingURL=index.b77252e5.js.map
